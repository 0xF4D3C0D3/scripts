#!/bin/bash
# Overwrite With History

MAX=1000
BASE="$HOME/.local/share/owh"

print_help() {
cat <<EOF
Usage: ${0##*/} [-c] [-t] [-r] [<file>]

    -c      copy $BASE or $BASE/<file path> to clipboard
    -h      print this help message
    -t      tree $BASE
    -r      revert file with latest diff
EOF
}

to_clipboard() {
    echo -n "$1" | xclip -selection clipboard
}

parse_args() {
    while getopts chtr option; do
        case "${option}" in
            c) [ $# -eq 1 ] && to_clipboard "$BASE" || to_clipboard "$BASE`realpath $2`"; exit 0;;
            h) print_help; exit 0;;
            t) tree -a "$BASE"; exit 0;;
            r) revert=1;;
            *) print_help; exit 1;;
        esac
    done

    n_index=$((OPTIND - 1))
}

repl() {
    PS3='>'
    options=("list versions of $REALPATH" "clear versions of $REALPATH" "copy $TARGET to clipboard")

    while true; do
        echo
        select opt in "${options[@]}" Quit
        do
            case $REPLY in
                1)                      ls -Alh "$TARGET"; break;;
                2)                      rm -rI  "$TARGET"; exit 0;;
                3)                      to_clipboard "$TARGET"; exit 0;;
                $((${#options[@]}+1)))  break 2;;
                *)                      break;
            esac
        done
    done
}

overwrite_with_history() {
    if [ ! -d "$TARGET" ]; then mkdir -p "$TARGET"; fi

    cat >/tmp/owh
    { diff -u $1 /tmp/owh || [ $? -ne 2 ]; } | tee "${TARGET}/`date +'%Y-%m-%d_%H:%M:%S'`" # see diff(1) epilogue
    cat /tmp/owh >"$1"
    rm /tmp/owh

    while [ $(ls -1 "$TARGET" | wc -l) -gt $MAX ]; do
        OLDEST=$(ls -1tr "$TARGET/"* | head -1)
        rm "$OLDEST"
    done
}

parse_args $@
shift $n_index

if [ $# -ne 1 ]; then
    print_help
    exit 1
fi

REALPATH=`realpath $1`
TARGET="${BASE}${REALPATH}"

if [ ! -z "$revert" ]; then
    patch_file=$(ls -Art $TARGET/* | tail -n1)
    cat $patch_file
    patch -R < $patch_file
    rm $patch_file
    exit 0
fi

umask 0077
set -eo pipefail

if [ ! -p /dev/stdin ]; then
    repl $@
else
    overwrite_with_history $@
fi
